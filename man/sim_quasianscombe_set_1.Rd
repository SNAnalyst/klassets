% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quasianscombe.R
\name{sim_quasianscombe_set_1}
\alias{sim_quasianscombe_set_1}
\title{Generate \emph{quasi} Anscombe data sets Type 1}
\usage{
sim_quasianscombe_set_1(
  n = 500,
  beta0 = 3,
  beta1 = 0.5,
  x_dist = purrr::partial(rnorm, mean = 5, sd = 1),
  error_dist = purrr::partial(rnorm, sd = 0.5)
)
}
\arguments{
\item{n}{Number of observations}

\item{beta0}{beta0, default value: 3,}

\item{beta1}{beta1, default value: 0.5}

\item{x_dist}{A random number generation function. Default is a \code{rnorm}
with mean 5 and sd 1.}

\item{error_dist}{A random number generation function. Default is a \code{rnorm}
with mean 0 and sd 0.5.}
}
\description{
This function generate a data set \emph{Type 1}  creating first a \code{x} a random vector
then apply a linear transformation using \code{beta0} and \code{beta1} and finally
adding a normal distributed noise using \code{error_sd} creating \code{y} values.
}
\details{
This is the \emph{typical first} example when regression analysis is taught.

Internally this is the same procedure of \code{sim_xy}.
}
\examples{

df <- sim_quasianscombe_set_1()

df

plot(df)

plot(df, add_lm = FALSE)

plot(sim_quasianscombe_set_1(n = 1000))

plot(sim_quasianscombe_set_1(n = 1000, beta0 = 0, beta1 = 1, x_dist = runif))

}
